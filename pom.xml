<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.baxter.caplin</groupId>
	<artifactId>caplin-wrapper</artifactId>
	<version>1.3-SNAPSHOT</version>

	<name>Caplin Wrapper</name>
	<description>The Wrapper around Caplin components</description>

	<url>https://github.com/BAXTER-IT/caplin-wrapper</url>

	<organization>
		<name>Baxter Technologies Ltd</name>
		<url>http://baxter-it.com</url>
	</organization>

	<inceptionYear>2014</inceptionYear>

	<scm>
		<connection>scm:git:git@github.com:BAXTER-IT/caplin-wrapper.git</connection>
		<developerConnection>scm:git:git@github.com:BAXTER-IT/caplin-wrapper.git</developerConnection>
		<url>git@github.com:BAXTER-IT/caplin-wrapper.git</url>
	</scm>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/BAXTER-IT/caplin-wrapper/issues</url>
	</issueManagement>

	<licenses>
		<license>
			<name>Baxter</name>
			<url>http://baxter.com/licenses/BAXTER-CONFIG-1.0.txt</url>
			<comments>Some comments to a license</comments>
			<distribution>manual</distribution>
		</license>
	</licenses>

	<developers>

		<developer>
			<id>ykryshchuk</id>
			<name>Yuriy Kryshchuk</name>
			<timezone>+2</timezone>
			<email>yuriy.kryshchuk@gmail.com</email>
		</developer>

	</developers>

	<build>

		<pluginManagement>

			<plugins>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>rpm-maven-plugin</artifactId>
					<version>2.1</version>
					<extensions>true</extensions>
				</plugin>

			</plugins>

		</pluginManagement>

		<plugins>

		</plugins>

	</build>

	<dependencyManagement>

		<dependencies>

		</dependencies>

	</dependencyManagement>

	<dependencies>


	</dependencies>

	<profiles>

		<profile>
			<id>Distribution-Artifactory</id>
			<distributionManagement>
				<repository>
					<id>artifactory-opensource-repository</id>
					<name>Artifactory Opensource Repository</name>
					<url>http://baxter.artifactoryonline.com/baxter/opensource-releases</url>
				</repository>
			</distributionManagement>
		</profile>

		<profile>
			<id>RPM</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<artifactId>maven-resources-plugin</artifactId>
							<executions>
								<execution>
									<id>filter-rpm-control</id>
									<goals>
										<goal>copy-resources</goal>
									</goals>
									<phase>process-resources</phase>
									<configuration>
										<outputDirectory>${rpm-control.dir}</outputDirectory>
										<resources>
											<resource>
												<directory>src/unix-control/rpm</directory>
												<filtering>true</filtering>
											</resource>
										</resources>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>rpm-maven-plugin</artifactId>
							<configuration>
								<name>${unix.package.name}</name>
								<group>${unix.package.group.name}</group>
								<defaultUsername>${unix.user}</defaultUsername>
								<defaultGroupname>${unix.group}</defaultGroupname>
								<defaultFilemode>644</defaultFilemode>
								<defaultDirmode>755</defaultDirmode>
								<needarch>false</needarch>
								<repackJars>false</repackJars>
								<requires combine.children="append">
									<require>artifactory-rest-client</require>
									<require>curl</require>
									<require>sed</require>
									<require>tar</require>
								</requires>
								<provides>
									<provide>${unix.package.name}</provide>
								</provides>
								<preinstallScriptlet>
									<scriptFile>${rpm-control.dir}/pre-install</scriptFile>
								</preinstallScriptlet>
								<postinstallScriptlet>
									<scriptFile>${rpm-control.dir}/post-install</scriptFile>
								</postinstallScriptlet>
								<preremoveScriptlet>
									<scriptFile>${rpm-control.dir}/pre-remove</scriptFile>
								</preremoveScriptlet>
								<postremoveScriptlet>
									<scriptFile>${rpm-control.dir}/post-remove</scriptFile>
								</postremoveScriptlet>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>rpm-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>build-std-rpm-installer</id>
								<phase>package</phase>
								<goals>
									<goal>attached-rpm</goal>
								</goals>
								<configuration>
									<classifier>std</classifier>
									<provides combine.children="append">
										<provide>${unix.package.name}-std</provide>
									</provides>
									<filters>
										<filter>${basedir}/src/filter/default.properties</filter>
									</filters>
									<mappings>
										<mapping>
											<directory>${std.bin.dir}</directory>
											<filemode>755</filemode>
											<sources>
												<source>
													<location>${basedir}/src/main/scripts/</location>
													<filter>true</filter>
												</source>
											</sources>
										</mapping>
									</mappings>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<properties>
				<rpm-control.dir>${project.build.directory}/rpm-control</rpm-control.dir>
				<std.bin.dir>/usr/bin</std.bin.dir>
			</properties>
		</profile>

	</profiles>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<unix.package.name>${project.artifactId}</unix.package.name>
		<unix.package.group.name>DevOps</unix.package.group.name>
		<unix.user>root</unix.user>
		<unix.group>root</unix.group>

	</properties>

</project>
